[{"/home/dcns/Desktop/MyProjects/novel-pedia/src/index.js":"1","/home/dcns/Desktop/MyProjects/novel-pedia/src/components/MainComponent.js":"2","/home/dcns/Desktop/MyProjects/novel-pedia/src/components/FooterComponent.js":"3","/home/dcns/Desktop/MyProjects/novel-pedia/src/App.js":"4","/home/dcns/Desktop/MyProjects/novel-pedia/src/components/HeaderComponent.js":"5","/home/dcns/Desktop/MyProjects/novel-pedia/src/components/HomeComponent.js":"6","/home/dcns/Desktop/MyProjects/novel-pedia/src/reportWebVitals.js":"7","/home/dcns/Desktop/MyProjects/novel-pedia/src/redux/ActionTypes.js":"8","/home/dcns/Desktop/MyProjects/novel-pedia/src/redux/ActionCreators.js":"9","/home/dcns/Desktop/MyProjects/novel-pedia/src/redux/Form.js":"10","/home/dcns/Desktop/MyProjects/novel-pedia/src/redux/configureStore.js":"11","/home/dcns/Desktop/MyProjects/novel-pedia/src/components/ContactComponent.js":"12","/home/dcns/Desktop/MyProjects/novel-pedia/src/redux/books.js":"13","/home/dcns/Desktop/MyProjects/novel-pedia/src/components/BooksComponent.js":"14","/home/dcns/Desktop/MyProjects/novel-pedia/src/redux/comments.js":"15","/home/dcns/Desktop/MyProjects/novel-pedia/src/components/AboutComponent.js":"16","/home/dcns/Desktop/MyProjects/novel-pedia/src/components/BookDetails.js":"17","/home/dcns/Desktop/MyProjects/novel-pedia/src/shared/baseUrl.js":"18","/home/dcns/Desktop/MyProjects/novel-pedia/src/components/LoadingComponent.js":"19","/home/dcns/Desktop/MyProjects/novel-pedia/src/redux/auth.js":"20"},{"size":639,"mtime":1606154212745,"results":"21","hashOfConfig":"22"},{"size":4066,"mtime":1606199629495,"results":"23","hashOfConfig":"22"},{"size":2518,"mtime":1606152816523,"results":"24","hashOfConfig":"22"},{"size":583,"mtime":1606157724602,"results":"25","hashOfConfig":"22"},{"size":6599,"mtime":1606229051278,"results":"26","hashOfConfig":"22"},{"size":525,"mtime":1606157866768,"results":"27","hashOfConfig":"22"},{"size":362,"mtime":1606136501606,"results":"28","hashOfConfig":"22"},{"size":545,"mtime":1606159591387,"results":"29","hashOfConfig":"22"},{"size":5899,"mtime":1606230364170,"results":"30","hashOfConfig":"22"},{"size":162,"mtime":1606150268688,"results":"31","hashOfConfig":"22"},{"size":676,"mtime":1606159472946,"results":"32","hashOfConfig":"22"},{"size":10454,"mtime":1606158128850,"results":"33","hashOfConfig":"22"},{"size":565,"mtime":1606151922804,"results":"34","hashOfConfig":"22"},{"size":1794,"mtime":1606228648351,"results":"35","hashOfConfig":"22"},{"size":522,"mtime":1606150268708,"results":"36","hashOfConfig":"22"},{"size":2316,"mtime":1606157063113,"results":"37","hashOfConfig":"22"},{"size":6792,"mtime":1606226141833,"results":"38","hashOfConfig":"22"},{"size":48,"mtime":1606161186317,"results":"39","hashOfConfig":"22"},{"size":247,"mtime":1606150736447,"results":"40","hashOfConfig":"22"},{"size":1421,"mtime":1606159529627,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rgnd9a",{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"59"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dcns/Desktop/MyProjects/novel-pedia/src/index.js",[],"/home/dcns/Desktop/MyProjects/novel-pedia/src/components/MainComponent.js",["89"],"/home/dcns/Desktop/MyProjects/novel-pedia/src/components/FooterComponent.js",[],["90","91"],"/home/dcns/Desktop/MyProjects/novel-pedia/src/App.js",[],["92","93"],"/home/dcns/Desktop/MyProjects/novel-pedia/src/components/HeaderComponent.js",[],"/home/dcns/Desktop/MyProjects/novel-pedia/src/components/HomeComponent.js",["94","95","96","97","98","99"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardImg, CardText, CardBody,CardTitle, CardSubtitle, Breadcrumb, BreadcrumbItem} from 'reactstrap';\n\n\nfunction Home(props) {\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb className=\"container\">\n                    <BreadcrumbItem active><Link>Home</Link></BreadcrumbItem>\n                </Breadcrumb>            \n            </div>\n        </div>\n    );\n}\n\nexport default Home;","/home/dcns/Desktop/MyProjects/novel-pedia/src/reportWebVitals.js",[],["100","101"],"/home/dcns/Desktop/MyProjects/novel-pedia/src/redux/ActionTypes.js",[],"/home/dcns/Desktop/MyProjects/novel-pedia/src/redux/ActionCreators.js",[],"/home/dcns/Desktop/MyProjects/novel-pedia/src/redux/Form.js",[],"/home/dcns/Desktop/MyProjects/novel-pedia/src/redux/configureStore.js",[],"/home/dcns/Desktop/MyProjects/novel-pedia/src/components/ContactComponent.js",["102","103","104","105","106","107","108"],"/home/dcns/Desktop/MyProjects/novel-pedia/src/redux/books.js",[],["109","110"],"/home/dcns/Desktop/MyProjects/novel-pedia/src/components/BooksComponent.js",[],"/home/dcns/Desktop/MyProjects/novel-pedia/src/redux/comments.js",[],"/home/dcns/Desktop/MyProjects/novel-pedia/src/components/AboutComponent.js",["111","112","113"],"import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\n\nfunction About(props) {\n\n    const leaders = props.leaders;\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb className=\"container\">\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>             \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-12\">\n                    <h2>Some Text</h2>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam varius purus ac sagittis venenatis. Curabitur dapibus fringilla felis, vel pharetra mi aliquam ut. Vivamus laoreet, elit eu tincidunt rhoncus, quam dolor blandit ipsum, at accumsan augue nulla ut mi. Curabitur fringilla aliquam sapien, sed consequat risus lacinia sed. Duis sed libero a libero sagittis tristique eu nec nibh. Fusce pharetra, diam non varius eleifend, urna justo faucibus nisl, eget sodales justo dolor eu augue. Nulla non leo ut sem maximus venenatis. Maecenas ac interdum justo, nec dapibus ex. Phasellus maximus accumsan finibus. Donec faucibus iaculis ullamcorper. Maecenas sit amet neque eget sapien cursus pharetra in ac nunc.\n                    </p>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">It is a far, far better thing that I do, than I have ever done; it is a far, far better rest I go to than I have ever known.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">A Tale of Two Cities,\n                                Charles Dickens</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","/home/dcns/Desktop/MyProjects/novel-pedia/src/components/BookDetails.js",["114","115","116","117"],"import React,{ Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem , Button, Col, Modal, ModalHeader, ModalBody, Label, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\n\nclass CommentForm extends Component {\n\n  constructor(props){\n        super(props);\n        this.toggleModal=this.toggleModal.bind(this);\n        this.handleSubmit=this.handleSubmit.bind(this);\n        this.state = {\n            isModalOpen: false\n        };\n    }\n\n    toggleModal(){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n      this.toggleModal();\n      this.props.postComment(this.props.bookId, values.rating, values.author, values.comment);\n    }\n\n  render(){\n    return(\n      <React.Fragment>\n        <Button onClick={this.toggleModal} outline className=\"offset-2 btn-info\"><span className=\"fa fa-lg fa-pencil\"></span> Submit Comment</Button>\n\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n          <ModalBody>\n              <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                  <Label htmlFor=\"rating\">Rating</Label>\n                  <Row className=\"form-group\">\n                      <Col className=\"col-12\">\n                          <Control.select model=\".rating\" name=\"rating\" default=\"3\"\n                          className=\"custom-select col-md-12 from-control\">\n                              <option>1</option>\n                              <option>2</option>\n                              <option>3</option>\n                              <option>4</option>\n                              <option>5</option>\n                          </Control.select>\n                      </Col>\n                  </Row>\n                  <Label htmlFor=\"author\">Your name</Label>\n                  <Row className=\"form-group\">\n                      <Col md={12}>\n                          <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\" \n                          className=\"form-control\"\n                          validators={{\n                              required, minLength: minLength(3), maxLength: maxLength(15)\n                          }}\n                          />\n                          <Errors \n                              className=\"text-danger\"\n                              model=\".author\"\n                              show=\"touched\"\n                              messages={{\n                                  required: 'Required',\n                                  minLength: 'Must be greater than 2 chracters',\n                                  maxLength: 'Must be 15 characters or less'\n                              }}\n                          />\n                      </Col>\n                  </Row>\n                  <Label htmlFor=\"comment\">Comment</Label>\n                  <Row className=\"form-group\">\n                      <Col>\n                          <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" \n                          rows=\"6\"  \n                          className=\"form-control\"/>\n                              \n                      </Col>\n                  </Row>\n                  <Row className=\"form-group\">\n                      <Col>\n                          <Button type=\"submit\" color=\"primary\">\n                              Submit\n                          </Button>\n                      </Col>\n                  </Row>\n              </LocalForm>\n          </ModalBody>\n      </Modal>\n    </React.Fragment>\n    );\n  }\n}\n\nfunction RenderBook({book}){\n\tif(book!=null){\n\t\treturn(\n\t\t\t<div className=\"col-12 col-sm-5 m-1\">\n        <FadeTransform in transformProps={{ exitTransform: 'scale(0.5) translateY(-50%)'}}>\n  \t\t\t\t<Card>\n  \t\t\t\t\t<CardImg top width=\"100%\" src={book.image} alt={book.name} />\n  \t\t\t\t\t<CardBody>\n  \t\t\t\t        <CardText>{book.description}</CardText>\n            </CardBody>\n  \t\t\t\t</Card>\n        </FadeTransform>\n\t\t\t</div>\n\t\t);\t\n\t}\n\telse {\n        return (\n            <div></div>\n        );\n    }\n}\n\n  function RenderComments({comments, postComment, bookId}) {\n  \tif(comments!=null){\n\n\t\treturn(\n\t\t\t<div className='col-12 col-md-5 m-1'>\n                <h4> Comments </h4>\n                <ul>\n                      <Stagger in>\n                        {comments.map((comment) => {\n                            return (\n                                <Fade in>\n                                <li key={comment._id}>\n                                <p>{comment.comment}</p>\n                                <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\n                                </li>\n                                </Fade>\n                            );\n                        })}\n                      </Stagger>\n                </ul>\n                <CommentForm bookId={bookId} postComment={postComment} />\n            </div>\n\t\t);\t\n\t}\n\telse {\n        return (\n            <div></div>\n        );\n    }\n}\n\nfunction Details(props) {\n  if(props.book!=null){\n              return (\n                <React.Fragment>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <Breadcrumb className=\"container\">\n                                <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                                <BreadcrumbItem><Link to=\"/list\">Books</Link></BreadcrumbItem>\n                                <BreadcrumbItem active>{props.book.name}</BreadcrumbItem>\n                            </Breadcrumb>\n                            <div className=\"col-12\">\n                                <h3>{props.book.name}</h3>\n                                <hr />\n                            </div>                \n                        </div>\n                        <div className=\"row\">\n                            <RenderBook book={props.book} />\n                            <RenderComments comments={props.comments} postComment={props.postComment} bookId={props.book._id} />\n                        </div>\n                    </div>\n                </React.Fragment>\n            );  \n  }\n  else{\n    return(<div></div>);\n  }\n}\n       \t\n\n\n\nexport default Details;","/home/dcns/Desktop/MyProjects/novel-pedia/src/shared/baseUrl.js",[],"/home/dcns/Desktop/MyProjects/novel-pedia/src/components/LoadingComponent.js",[],"/home/dcns/Desktop/MyProjects/novel-pedia/src/redux/auth.js",[],{"ruleId":"118","severity":1,"message":"119","line":76,"column":11,"nodeType":"120","messageId":"121","endLine":76,"endColumn":23},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"122","replacedBy":"126"},{"ruleId":"124","replacedBy":"127"},{"ruleId":"118","severity":1,"message":"128","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":14},{"ruleId":"118","severity":1,"message":"129","line":3,"column":16,"nodeType":"120","messageId":"121","endLine":3,"endColumn":23},{"ruleId":"118","severity":1,"message":"130","line":3,"column":25,"nodeType":"120","messageId":"121","endLine":3,"endColumn":33},{"ruleId":"118","severity":1,"message":"131","line":3,"column":35,"nodeType":"120","messageId":"121","endLine":3,"endColumn":43},{"ruleId":"118","severity":1,"message":"132","line":3,"column":44,"nodeType":"120","messageId":"121","endLine":3,"endColumn":53},{"ruleId":"118","severity":1,"message":"133","line":3,"column":55,"nodeType":"120","messageId":"121","endLine":3,"endColumn":67},{"ruleId":"122","replacedBy":"134"},{"ruleId":"124","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":72,"column":37,"nodeType":"138","endLine":78,"endColumn":44},{"ruleId":"136","severity":1,"message":"137","line":94,"column":37,"nodeType":"138","endLine":100,"endColumn":44},{"ruleId":"136","severity":1,"message":"137","line":116,"column":37,"nodeType":"138","endLine":122,"endColumn":44},{"ruleId":"136","severity":1,"message":"137","line":139,"column":37,"nodeType":"138","endLine":145,"endColumn":44},{"ruleId":"136","severity":1,"message":"139","line":161,"column":45,"nodeType":"138","endLine":163,"endColumn":52},{"ruleId":"136","severity":1,"message":"140","line":169,"column":37,"nodeType":"138","endLine":170,"endColumn":66},{"ruleId":"136","severity":1,"message":"141","line":179,"column":37,"nodeType":"138","endLine":181,"endColumn":68},{"ruleId":"122","replacedBy":"142"},{"ruleId":"124","replacedBy":"143"},{"ruleId":"118","severity":1,"message":"144","line":2,"column":54,"nodeType":"120","messageId":"121","endLine":2,"endColumn":64},{"ruleId":"118","severity":1,"message":"145","line":2,"column":66,"nodeType":"120","messageId":"121","endLine":2,"endColumn":71},{"ruleId":"118","severity":1,"message":"146","line":8,"column":11,"nodeType":"120","messageId":"121","endLine":8,"endColumn":18},{"ruleId":"118","severity":1,"message":"147","line":5,"column":10,"nodeType":"120","messageId":"121","endLine":5,"endColumn":17},{"ruleId":"136","severity":1,"message":"140","line":46,"column":27,"nodeType":"138","endLine":47,"endColumn":76},{"ruleId":"136","severity":1,"message":"137","line":59,"column":27,"nodeType":"138","endLine":64,"endColumn":29},{"ruleId":"136","severity":1,"message":"141","line":80,"column":27,"nodeType":"138","endLine":82,"endColumn":53},"no-unused-vars","'PrivateRoute' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["148"],"no-negated-in-lhs",["149"],["148"],["149"],"'Card' is defined but never used.","'CardImg' is defined but never used.","'CardText' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'CardSubtitle' is defined but never used.",["148"],["149"],"react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["148"],["149"],"'CardHeader' is defined but never used.","'Media' is defined but never used.","'leaders' is assigned a value but never used.","'baseUrl' is defined but never used.","no-global-assign","no-unsafe-negation"]