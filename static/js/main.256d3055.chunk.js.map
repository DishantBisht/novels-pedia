{"version":3,"sources":["components/HomeComponent.js","components/AboutComponent.js","components/LoadingComponent.js","components/BooksComponent.js","components/ContactComponent.js","components/BookDetails.js","components/HeaderComponent.js","components/FooterComponent.js","shared/baseUrl.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/books.js","redux/comments.js","redux/auth.js","redux/Form.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Home","props","className","Breadcrumb","BreadcrumbItem","active","About","leaders","to","Card","CardBody","title","Loading","RenderBooksItem","book","_id","CardImg","width","height","src","image","alt","name","CardImgOverlay","CardTitle","Books","books","map","isLoading","errMess","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","console","log","JSON","stringify","this","postFeedback","resetFeedbackForm","href","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","id","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","Button","type","color","Component","CommentForm","toggleModal","state","isModalOpen","setState","postComment","bookId","author","rating","comment","alert","Fragment","onClick","outline","Modal","isOpen","toggle","ModalHeader","ModalBody","default","RenderBook","in","transformProps","exitTransform","top","CardText","category","description","writer","RenderComments","auth","comments","by","Intl","DateTimeFormat","year","month","day","format","Date","parse","updatedAt","Details","Header","isNavOpen","isSignupModalOpen","toggleNav","handleLogin","handleLogout","toggleSignupModal","handleSingup","event","loginUser","username","value","password","preventDefault","postSignup","logoutUser","Navbar","dark","expand","NavbarToggler","NavbarBrand","Collapse","navbar","Nav","NavItem","isAuthenticated","user","isFetching","Jumbotron","Form","FormGroup","Input","innerRef","input","remember","Footer","baseUrl","ADD_COMMENT","BOOKS_LOADING","BOOKS_FAILED","ADD_BOOKS","ADD_COMMENTS","COMMENTS_FAILED","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","booksLoading","ActionTypes","booksFailed","errmess","payload","addBooks","addComment","creds","dispatch","requestLogin","fetch","method","headers","body","then","response","ok","error","Error","status","statusText","json","success","localStorage","setItem","token","receiveLogin","catch","message","removeItem","Main","fetchBooks","TransitionGroup","CSSTransition","classNames","timeout","path","component","filter","featured","booksErrMess","exact","match","params","commentsErrMess","location","key","withRouter","connect","promotions","favorites","newComment","bearer","getItem","actions","reset","feedback","credentials","action","Comments","concat","Auth","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","style","backgroundColor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.256d3055.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem} from 'reactstrap';\n\n\nfunction Home(props) {\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb className=\"container\">\n                    <BreadcrumbItem active><Link>Home</Link></BreadcrumbItem>\n                </Breadcrumb>            \n            </div>\n            <div className=\"col-12 col-md-12\">\n                <h2>A Guide to different aspects of this site...</h2>\n                <hr />\n                <p>Give about page a read if you have some extra time to spare\n                </p>\n                <hr />\n                <p>The Books page contains a list of novels you may have read. Click on any to see the details. \n                    Feel free to add a comment too.\n                </p>\n                <hr />\n                <p>The Contact page allows you send a feedback to us. Though you can only send us a feedback if you are logged in. It will be stored in our Db.\n                </p>\n            </div>\n        </div>\n        \n    );\n}\n\nexport default Home;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\n\nfunction About(props) {\n\n    const leaders = props.leaders;\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb className=\"container\">\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>             \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-12\">\n                    <h2>Hi there!</h2>\n                    <p>This website was designed for the sole purpose of showcasing my skills as a MERN stack Developer. \n                        Plaese Do read the guide on the home page to understand the aspects of this website.\n                        Have a nice day! \n                    </p>\n                    <p>Do read the random quote..\n                    </p>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">It is a far, far better thing that I do, than I have ever done; it is a far, far better rest I go to than I have ever known.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">A Tale of Two Cities,\n                                Charles Dickens</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","import React from 'react';\nimport {Card, CardTitle, CardImgOverlay, CardImg, Breadcrumb, BreadcrumbItem} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\n\nfunction RenderBooksItem({book}){\n\treturn(\n\t\t<Link to={`/books/${book._id}`} >\n\t\t\t<Card key={book._id}>\n                <CardImg className=\"img-fluid\" width=\"100%\" height=\"100%\" src={book.image} alt={book.name} />\n\t\t        <CardImgOverlay>\n\t\t        \t<CardTitle className=\"btn btn-light\">{book.name}</CardTitle>\n\t\t        </CardImgOverlay>\n\t\t    </Card>\n\t    </Link>\n\t);\n}\n\nconst Books = (props) => {\n\t\nconst books = props.books.books.map((book) => {\n\t\treturn(\n\t\t\t<div className=\"col-12 col-sm-5 m-1 card-deck\">\n\t\t    \t<RenderBooksItem book={book} />\n\t\t    </div>\n\t\t\t);\n\t});\n\t\tif (props.books.isLoading) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">            \n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if (props.books.errMess) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\"> \n                        <div className=\"col-12\">\n                            <h4>{props.books.errMess}</h4>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        else\n\t\treturn(\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>Books</BreadcrumbItem>\n                </Breadcrumb>              \n            </div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{books}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t);\n}\n\n\nexport default Books;","import React,{ Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\nimport { Control, Form, Errors } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\nclass Contact extends Component {\n    constructor(props){\n        super(props);\n        this.handleSubmit=this.handleSubmit.bind(this);\n    }\n\n     handleSubmit(values) {\n        console.log(\"Current State is: \" + JSON.stringify(values));\n        this.props.postFeedback(values);\n        this.props.resetFeedbackForm();\n      }\n\n\n    render(){\n\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb className=\"container\">\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>               \n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <address>\n                            UPES<br />\n                            Dehradun<br />\n                            INDIA<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:DishantBisht32@gmail.com\">DishantBisht32@gmail.com</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\" href=\"/contact\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us your Feedback</h3>\n                        <hr />\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                                                        <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            minLength: 'Must be greater than 2 characters. ',\n                                            maxLength: 'Must be 15 characters or less. '\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            minLength: 'Must be greater than 2 characters. ',\n                                            maxLength: 'Must be 15 characters or less. '\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. Number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers. ',\n                                            maxLength: 'Must be 15 numbers or less. ',\n                                            isNumber: 'Must be a number. '\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            validEmail: 'Invalid Email Address. '\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                                className=\"form-check-input\"\n                                                 /> {' '}\n                                                <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                    Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n               </div>\n            </div>\n        );    \n    }\n}\n\nexport default Contact;","import React,{ Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem , Button, Col, Modal, ModalHeader, ModalBody, Label, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\n\nclass CommentForm extends Component {\n\n  constructor(props){\n        super(props);\n        this.toggleModal=this.toggleModal.bind(this);\n        this.handleSubmit=this.handleSubmit.bind(this);\n        this.state = {\n            isModalOpen: false\n        };\n    }\n\n    toggleModal(){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n      this.toggleModal();\n      this.props.postComment(this.props.bookId, values.author, values.rating, values.comment);\n      alert(\"Please! Refresh The page\");\n    }\n\n  render(){\n    return(\n      <React.Fragment>\n        <Button onClick={this.toggleModal} outline className=\"offset-2 btn-info\"><span className=\"fa fa-lg fa-pencil\"></span> Submit Comment</Button>\n\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n          <ModalBody>\n              <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                  <Label htmlFor=\"rating\">Rating</Label>\n                  <Row className=\"form-group\">\n                      <Col className=\"col-12\">\n                          <Control.select model=\".rating\" name=\"rating\" default=\"3\"\n                          className=\"custom-select col-md-12 from-control\">\n                              <option>1</option>\n                              <option>2</option>\n                              <option>3</option>\n                              <option>4</option>\n                              <option>5</option>\n                          </Control.select>\n                      </Col>\n                  </Row>\n                  <Label htmlFor=\"author\">Your name</Label>\n                  <Row className=\"form-group\">\n                      <Col md={12}>\n                          <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\" \n                          className=\"form-control\"\n                          validators={{\n                              required, minLength: minLength(3), maxLength: maxLength(15)\n                          }}\n                          />\n                          <Errors \n                              className=\"text-danger\"\n                              model=\".author\"\n                              show=\"touched\"\n                              messages={{\n                                  required: 'Required',\n                                  minLength: 'Must be greater than 2 chracters',\n                                  maxLength: 'Must be 15 characters or less'\n                              }}\n                          />\n                      </Col>\n                  </Row>\n                  <Label htmlFor=\"comment\">Comment</Label>\n                  <Row className=\"form-group\">\n                      <Col>\n                          <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" \n                          rows=\"6\"  \n                          className=\"form-control\"/>\n                              \n                      </Col>\n                  </Row>\n                  <Row className=\"form-group\">\n                      <Col>\n                          <Button type=\"submit\" color=\"primary\">\n                              Submit\n                          </Button>\n                      </Col>\n                  </Row>\n              </LocalForm>\n          </ModalBody>\n      </Modal>\n    </React.Fragment>\n    );\n  }\n}\n\nfunction RenderBook({book}){\n\tif(book!=null){\n\t\treturn(\n\t\t\t<div className=\"col-12 col-sm-5 m-1\">\n        <FadeTransform in transformProps={{ exitTransform: 'scale(0.5) translateY(-50%)'}}>\n  \t\t\t\t<Card>\n  \t\t\t\t\t<CardImg top width=\"100%\" src={book.image} alt={book.name} />\n  \t\t\t\t\t<CardBody>\n                        <CardText>Category: {book.category}</CardText>\n  \t\t\t\t        <CardText>{book.description}</CardText>\n                        <CardText><em>{book.writer}</em></CardText>   \n            </CardBody>\n  \t\t\t\t</Card>\n        </FadeTransform>\n\t\t\t</div>\n\t\t);\t\n\t}\n\telse {\n        return (\n            <div></div>\n        );\n    }\n}\n\n  function RenderComments({auth, comments, postComment, bookId}) {\n  \tif(comments!=null){\n\n\t\treturn(\n\t\t\t<div className='col-12 col-md-5 m-1'>\n                <h4> Comments </h4>\n                <ul>\n                      <Stagger in>\n                        {comments.map((comment) => {\n                            return (\n                                <Fade key={comment._id} in>\n                                <li>\n                                    <p>{comment.comment}</p>\n                                    <p>{comment.rating} stars</p>\n                                    <p>-- {comment.by} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(Date.parse(comment.updatedAt)))}</p>\n                                </li>\n                                </Fade>\n                            );\n                        })}\n                      </Stagger>\n                </ul>\n                <CommentForm auth={auth} bookId={bookId} postComment={postComment} />\n            </div>\n\t\t);\t\n\t}\n\telse {\n        return (\n            <div></div>\n        );\n    }\n}\n\nfunction Details(props) {\n    \n  if(props.book!=null){\n              return (\n                <React.Fragment>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <Breadcrumb className=\"container\">\n                                <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                                <BreadcrumbItem><Link to=\"/books\">Books</Link></BreadcrumbItem>\n                                <BreadcrumbItem active>{props.book.name}</BreadcrumbItem>\n                            </Breadcrumb>\n                            <div className=\"col-12\">\n                                <h3>{props.book.name}</h3>\n                                <hr />\n                            </div>                \n                        </div>\n                        <div className=\"row\">\n                            <RenderBook book={props.book} />\n                            <RenderComments auth={props.auth} comments={props.book.comments} postComment={props.postComment} bookId={props.book._id} />\n                        </div>\n                    </div>\n                </React.Fragment>\n            );  \n  }\n  else{\n    return(<div></div>);\n  }\n}\n       \t\n\n\n\nexport default Details;","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\n    Button, Modal, ModalHeader, ModalBody,\n    Form, FormGroup, Input, Label } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false,\n            isSignupModalOpen: false\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n        this.toggleSignupModal = this.toggleSignupModal.bind(this);\n        this.handleSingup = this.handleSingup.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        this.props.loginUser({username: this.username.value, password: this.password.value});\n        event.preventDefault();\n\n    }\n\n    toggleSignupModal() {\n        this.setState({\n            isSignupModalOpen: !this.state.isSignupModalOpen\n        });\n    }\n\n    handleSingup(event) {\n        this.toggleSignupModal();\n        this.props.postSignup({username: this.username.value, password: this.password.value});\n        event.preventDefault();\n\n    }\n\n    handleLogout() {\n        this.props.logoutUser();\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\"\n                                alt=\"NovelsPedia\" />\n                        </NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/home\">\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/books\">\n                                        <span className=\"fa fa-list fa-lg\"></span> Books\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    { !this.props.auth.isAuthenticated ?\n                                        <div>\n                                            <Button className=\"btn btn-outline-light\" outline onClick={this.toggleModal}>\n                                                <span className=\"fa fa-lg\"></span> Login\n                                                {this.props.auth.isFetching ?\n                                                    <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\n                                                    : null\n                                                }\n                                            </Button>\n                                            <Button className=\"btn btn-outline-light\" outline onClick={this.toggleSignupModal}>\n                                                <span className=\"fa fa-lg\"></span> Sign Up\n                                            </Button>\n                                        </div>\n                                        :\n                                        <div>\n                                        <div className=\"navbar-text mr-3\">{this.props.auth.user.username}</div>\n                                        <Button onClick={this.handleLogout}>\n                                            <span className=\"fa fa-sign-out fa-lg\"></span> Logout\n                                            {this.props.auth.isFetching ?\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\n                                                : null\n                                            }\n                                        </Button>\n                                        </div>\n                                    }\n\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron className=\"container\">\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Novels Pedia</h1>\n                                <h4>A collection of novels!</h4>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input}  />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                    innerRef={(input) => this.remember = input}  />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n                <Modal isOpen={this.state.isSignupModalOpen} toggle={this.toggleSignupModal}>\n                    <ModalHeader toggle={this.toggleSignupModal}>Sign Up</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleSingup}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input}  />\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Sign Up</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return(\n    <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 col-sm-2\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li><Link to='/home'>Home</Link></li>\n                        <li><Link to='/aboutus'>About Us</Link></li>\n                        <li><Link to='/books'>Books</Link></li>\n                        <li><Link to='/contactus'>Contact Us</Link></li>\n                    </ul>\n                </div>\n                <div className=\"col-7 col-sm-5\">\n                    <h5>Our Address</h5>\n                    <address>\n\t\t              UPES<br />\n\t\t              Dehradun<br />\n\t\t              INDIA<br />\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: 9876543210<br />\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: 99999999999<br />\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:dishantbisht32@gmail.com\"> NovelsPedia.net</a>\n                    </address>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                        <a className=\"btn btn-social-icon btn-google\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright Novels Pedia</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Footer;","export const baseUrl = 'https://novelspedia.herokuapp.com/';","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const BOOKS_LOADING = 'BOOKS_LOADING';\nexport const BOOKS_FAILED = 'BOOKS_FAILED';\nexport const ADD_BOOKS = 'ADD_BOOKS';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';","import { CardImgOverlay } from 'reactstrap';\nimport { baseUrl } from '../shared/baseUrl';\nimport * as ActionTypes from './ActionTypes';\n\nexport const fetchBooks = () => (dispatch) => {\n\n    dispatch(booksLoading(true));\n\n    return fetch(baseUrl + 'books')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(books => dispatch(addBooks(books)))\n    .catch(error => dispatch(booksFailed(error.message)));\n}\n\nexport const booksLoading = () => ({\n    type: ActionTypes.BOOKS_LOADING\n});\n\nexport const booksFailed = (errmess) => ({\n    type: ActionTypes.BOOKS_FAILED,\n    payload: errmess\n});\n\nexport const addBooks = (books) => ({\n    type: ActionTypes.ADD_BOOKS,\n    payload: books\n});\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const postComment = (bookId, by, rating, comment) => (dispatch) => {\n    const newComment = {\n        rating: rating,\n        by: by,\n        comment: comment\n    };\n\n    const bearer = 'Bearer ' + localStorage.getItem('token');\n    console.log(bearer);\n    return fetch(baseUrl + \"books/\" + bookId + '/comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': bearer\n      }\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\n '+error.message); });\n};\n\nexport const addComment = (bookId, rating, author, comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postFeedback = (feedback) => (dispatch) => {\n\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  return fetch(baseUrl + \"feedback\", {\n    method: \"POST\",\n    body: JSON.stringify(feedback),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Authorization': bearer\n    },\n    credentials: \"same-origin\"\n  })\n    .then(\n      response => {\n   \n     if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        throw error;\n      }\n    )\n    .then(response => response.json())\n    .then(response =>\n      alert(\"Thank you for your feedback!\" + JSON.stringify(response))\n    )\n    .catch(error => {\n      console.log(\"post feedbacks\", error.message);\n      alert(\"Your feedback could not be posted \\n Please Login first \\n Error: \" + error.message);\n    });\n};\n\nexport const requestLogin = (creds) => {\n  return {\n      type: ActionTypes.LOGIN_REQUEST,\n      creds\n  }\n}\n\nexport const receiveLogin = (response) => {\n  return {\n      type: ActionTypes.LOGIN_SUCCESS,\n      token: response.token\n  }\n}\n\nexport const loginError = (message) => {\n  return {\n      type: ActionTypes.LOGIN_FAILURE,\n      message\n  }\n}\n\nexport const loginUser = (creds) => (dispatch) => {\n  dispatch(requestLogin(creds))\n\n  return fetch(baseUrl + 'users/login', {\n      method: 'POST',\n      headers: { \n          'Content-Type':'application/json' \n      },\n      body: JSON.stringify(creds)\n  })\n  .then(response => {\n      if (response.ok) {\n          return response;\n      } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n      }\n      },\n      error => {\n          throw error;\n      })\n  .then(response => response.json())\n  .then(response => {\n      if (response.success) {\n\n          localStorage.setItem('token', response.token);\n          localStorage.setItem('creds', JSON.stringify(creds));\n          dispatch(receiveLogin(response));\n      }\n      else {\n          var error = new Error('Error ' + response.status);\n          error.response = response;\n          throw error;\n      }\n  })\n  .catch(error => dispatch(loginError(error.message)))\n};\n\nexport const requestLogout = () => {\n  return {\n    type: ActionTypes.LOGOUT_REQUEST\n  }\n}\n\nexport const receiveLogout = () => {\n  return {\n    type: ActionTypes.LOGOUT_SUCCESS\n  }\n}\n\nexport const logoutUser = () => (dispatch) => {\n  dispatch(requestLogout())\n  localStorage.removeItem('token');\n  localStorage.removeItem('creds');\n  dispatch(receiveLogout())\n}\n\nexport const postSignup = (creds) => (dispatch) => {\n  \n  return fetch(baseUrl + 'users/signup' , {\n      method: \"POST\",\n      body: JSON.stringify(creds),\n      headers: {\n        'Content-Type': 'application/json'\n    },\n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .catch(error =>  { console.log('post UserSignUp', error.message); alert('User not Added\\n '+error.message); });\n};","import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport About from './AboutComponent';\nimport Books from './BooksComponent';\nimport Contact from './ContactComponent';\nimport BookDetail from './BookDetails';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { postComment, postFeedback, fetchBooks, loginUser, logoutUser, postSignup } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst mapStateToProps = state => {\n    return {\n      books: state.books,\n      comments: state.comments,\n      promotions: state.promotions,\n      leaders: state.leaders,\n      favorites: state.favorites,\n      auth: state.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  postComment: (bookId, by, rating, comment) => dispatch(postComment(bookId, by, rating, comment)),\n  fetchBooks: () => {dispatch(fetchBooks())},\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\n  postFeedback: (feedback) => dispatch(postFeedback(feedback)),\n  loginUser: (creds) => dispatch(loginUser(creds)),\n  logoutUser: () => dispatch(logoutUser()),\n  postSignup: (creds) => dispatch(postSignup(creds))\n});\n\nclass Main extends Component {\n\n  componentDidMount() {\n    this.props.fetchBooks();\n  }\n\n  render() {\n\n    const HomePage = () => {\n      return(\n        <Home book={this.props.books.books.filter((book) => book.featured)[0]}\n          booksLoading={this.props.books.isLoading}\n          booksErrMess={this.props.books.errMess}\n        />\n      );\n    }\n\n    const BookWithId = ({match}) => {\n      return(\n        this.props.auth.isAuthenticated\n        ?\n        <BookDetail book={this.props.books.books.filter((book) => book._id === match.params.bookId)[0]}\n          isLoading={this.props.books.isLoading}\n          errMess={this.props.books.errMess}\n          commentsErrMess={this.props.comments.errMess}\n          postComment={this.props.postComment}\n          auth={this.props.auth}\n          />\n        :\n        <BookDetail book={this.props.books.books.filter((book) => book._id === match.params.bookId)[0]}\n          isLoading={this.props.books.isLoading}\n          errMess={this.props.books.errMess}\n          commentsErrMess={this.props.comments.errMess}\n          postComment={this.props.postComment}\n          auth={this.props.auth}\n          />\n      );\n    }\n\n    const PrivateRoute = ({ component: Component, ...rest }) => (\n      <Route {...rest} render={(props) => (\n        this.props.auth.isAuthenticated\n          ? <Component {...props} />\n          : <Redirect to={{\n              pathname: '/home',\n              state: { from: props.location }\n            }} />\n      )} />\n    );\n\n    return (\n      <div>\n        <Header auth={this.props.auth} \n          loginUser={this.props.loginUser} \n          logoutUser={this.props.logoutUser}\n          postSignup={this.props.postSignup} \n          />   \n        <TransitionGroup>\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n            <Switch>\n              <Route path=\"/home\" component={HomePage} />\n              <Route exact path='/aboutus' component={() => <About />} />\n              <Route exact path=\"/books\" component={() => <Books books={this.props.books} />} />\n              <Route path=\"/books/:bookId\" component={BookWithId} />\n              <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\n              <Redirect to=\"/home\" />\n            </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\n\nexport const Books = (state = { isLoading: true, errMess: null, books:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_BOOKS:\n            return {...state, isLoading: false, errMess: null, books: action.payload};\n\n        case ActionTypes.BOOKS_LOADING:\n            return {...state, isLoading: true, errMess: null, books: []}\n\n        case ActionTypes.BOOKS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_COMMENTS:\n      return {...state, errMess: null, comments: action.payload};\n\n    case ActionTypes.COMMENTS_FAILED:\n      return {...state, errMess: action.payload};\n\n    case ActionTypes.ADD_COMMENT:\n        var comment = action.payload;\n        return { ...state, comments: state.comments.concat(comment)};\n\n    default:\n      return state;\n  }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Auth = (state = {\n        isLoading: false,\n        isAuthenticated: localStorage.getItem('token') ? true : false,\n        token: localStorage.getItem('token'),\n        user: localStorage.getItem('creds') ? JSON.parse(localStorage.getItem('creds')) : null,\n        errMess: null\n    }, action) => {\n    switch (action.type) {\n        case ActionTypes.LOGIN_REQUEST:\n            return {...state,\n                isLoading: true,\n                isAuthenticated: false,\n                user: action.creds\n            };\n        case ActionTypes.LOGIN_SUCCESS:\n            return {...state,\n                isLoading: false,\n                isAuthenticated: true,\n                errMess: '',\n                token: action.token\n            };\n        case ActionTypes.LOGIN_FAILURE:\n            return {...state,\n                isLoading: false,\n                isAuthenticated: false,\n                errMess: action.message\n            };\n        case ActionTypes.LOGOUT_REQUEST:\n            return {...state,\n                isLoading: true,\n                isAuthenticated: true\n            };\n        case ActionTypes.LOGOUT_SUCCESS:\n            return {...state,\n                isLoading: false,\n                isAuthenticated: false,\n                token: '',\n                user: null\n            };\n        default:\n            return state\n    }\n}","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n};","import React,{ Component } from 'react';\nimport './App.css';\nimport Main from './components/MainComponent';\nimport {BrowserRouter} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render(){\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\" style={{ backgroundColor: '#cfb3aa' }}>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","import {createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { Books } from './books';\nimport { Comments } from './comments';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { Auth } from './auth';\nimport { InitialFeedback } from './Form.js';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            books: Books,\n            comments: Comments,\n            auth: Auth,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}